version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.1.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent.jar=1234:/usr/share/jmx_exporter/config/kafka-broker.yml
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx_exporter/config/
      - ./build/libs/jmx_prometheus_javaagent-0.16.0.jar:/usr/share/jmx_exporter/jmx_prometheus_javaagent.jar

  init-kafka:
    image: confluentinc/cp-kafka:7.1.1
    container_name: init-kafka
    depends_on:
      - kafka
    command:
      - bash
      - -c
      - |
        # blocks until kafka is reachable
        kafka-topics --bootstrap-server kafka:9092 --list
        
        echo -e 'Creating kafka topics'
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic input --replication-factor 1 --partitions 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic output --replication-factor 1 --partitions 1
        
        echo -e 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka:9092 --list

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.6.8
    container_name: kafka-lag-exporter
    ports:
      - "9999:9999"
    volumes:
      - ./metrics/kafka-lag-exporter/:/opt/docker/conf/

  prometheus:
    image: prom/prometheus:v2.36.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus/:/etc/prometheus/

  grafana:
    image: grafana/grafana:8.5.4
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./metrics/grafana/provisioning/:/etc/grafana/provisioning/

  kafka-streams-challenge:
    image: kafka-streams-challenge
    container_name: kafka-streams-challenge
    build: .
    depends_on:
      - init-kafka
    environment:
      JAVA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent.jar=1234:/usr/share/jmx_exporter/config/kafka-streams.yml
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./metrics/jmx-exporter:/usr/share/jmx_exporter/config/
      - ./build/libs/jmx_prometheus_javaagent-0.16.0.jar:/usr/share/jmx_exporter/jmx_prometheus_javaagent.jar
